<?xml version="1.0" encoding="UTF-8" ?> 
<!DOCTYPE mapper 
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.domi.mapper.AccountBookMapper">

	<insert id="insert" parameterType="AccountBook" useGeneratedKeys="true" keyProperty="id">
		insert into account_book(userId, platformName, repaymentMoney, repaymentDate, repaymentType, loanTerm, loanTime, repaymentDay, addTime, remark, money)
		values(#{userId}, #{platformName}, #{repaymentMoney}, #{repaymentDate},#{repaymentType}, #{loanTerm},#{loanTime}, #{repaymentDay},#{addTime}, #{remark}, #{money})
	</insert>
	
	<update id="updateRemark" parameterType="Map">
		update account_book set  remark=#{remark} where id=#{id}
	</update>
	
	<select id="queryById" parameterType="Integer" resultType="AccountBook">
		select * from account_book where id=#{id}
	</select>
		
	<select id="queryAccountBooks" parameterType="Map" resultType="AccountBook">
		select id, 	platformName,  repaymentMoney, money from account_book where userId=#{userId} order by id desc 
		limit #{pageIndex}, #{pageSize}		
	</select>
	
	
	<select id="queryMoneyByUserId" parameterType="Integer" resultType="Float">
		select IFNULL(SUM(money), 0) money from account_book where userId=#{userId}
	</select>
	
	<delete id="deleteById" parameterType="Integer" >
		delete from account_book where id=#{id}
	</delete>
	
	
	<select id="queryByUserId" parameterType="Integer" resultType="AccountBook">
		select * from account_book where userId=#{userId} order by id desc LIMIT #{pageIndex}, #{pageSize};
	</select>
	
	<select id="queryCountByUserId" parameterType="Integer" resultType="Integer">
		select COUNT(*) from account_book where userId=#{userId}
	</select>
	
</mapper>